{"version":3,"sources":["webpack:///./rijkshuisstijl/js/components/datagrid/datagrid-export.js"],"names":["MAX_ITERATION_COUNT","DataGridExportHelper","node","bindEvents","addEventListener","update","bind","i","classList","contains","BLOCK_DATAGRID","parentNode","e","dataGrid","getDataGrid","checkboxCells","BEM","getChildBEMNodes","ELEMENT_CELL","MODIFIER_CHECKBOX","checkboxesInputs","map","getChildBEMNode","BLOCK_INPUT","selectedCheckboxInputs","find","checked","preventDefault","form","ELEMENT_FORM","MODIFIER_ACTION","selectAll","BLOCK_SELECT_ALL","forEach","hiddenInput","document","createElement","name","value","type","appendChild","submit","DATAGRID_EXPORTS"],"mappings":";;;;;;;;;;;;;;;;+pDAYA,GAAMA,oBAAmB,CAAG,GAA5B,CAEA;;MAGMC,qB,yBACF;;;OAIA,8BAAYC,IAAZ,CAAkB,4CACd,0BACA,KAAKA,IAAL,CAAYA,IAAZ,CAEA,KAAKC,UAAL,GACH,CAED;;uFAGa,CACT,KAAKD,IAAL,CAAUE,gBAAV,CAA2B,OAA3B,CAAoC,KAAKC,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAApC,EACH,C,iDAEa,CACV,GAAIJ,KAAI,CAAG,KAAKA,IAAhB,CACA,GAAIK,EAAC,CAAG,CAAR,CACA,MAAO,CAACL,IAAI,CAACM,SAAL,CAAeC,QAAf,CAAwBC,yDAAxB,CAAR,CAAiD,CAC7CH,CAAC,GACDL,IAAI,CAAGA,IAAI,CAACS,UAAZ,CAEA,GAAIJ,CAAC,CAAGP,mBAAR,CAA6B,CACzB,oCAA8BA,mBAA9B,sDACH,CACJ,CAED,MAAOE,KAAP,CACH,CAED;;;6CAIOU,C,CAAG,CACN,GAAMC,SAAQ,CAAG,KAAKC,WAAL,EAAjB,CACA,GAAMC,cAAa,CAAGC,6CAAG,CAACC,gBAAJ,CAAqBJ,QAArB,CAA+BH,yDAA/B,CAA+CQ,uDAA/C,CAA6DC,4DAA7D,CAAtB,CACA,GAAMC,iBAAgB,CAAG,mBAAIL,aAAJ,EAAmBM,GAAnB,CAAuB,SAAAnB,IAAI,QAAIc,8CAAG,CAACM,eAAJ,CAAoBpB,IAApB,CAA0BqB,2DAA1B,CAAJ,EAA3B,CAAzB,CACA,GAAMC,uBAAsB,CAAGJ,gBAAgB,CAACK,IAAjB,CAAsB,SAAAvB,IAAI,QAAIA,KAAI,CAACwB,OAAT,EAA1B,CAA/B,CAEA;AACA,GAAI,CAACF,sBAAL,CAA6B,CACzBZ,CAAC,CAACe,cAAF,GACA,GAAMC,KAAI,CAAGZ,6CAAG,CAACM,eAAJ,CAAoBT,QAApB,CAA8BH,yDAA9B,CAA8CmB,uDAA9C,CAA4DC,0DAA5D,CAAb,CACA,GAAMC,UAAS,CAAGf,6CAAG,CAACM,eAAJ,CAAoBT,QAApB,CAA8BmB,kEAA9B,CAAlB,CAEA;AACAD,SAAS,CAACL,OAAV,CAAoB,IAApB,CACAN,gBAAgB,CAACa,OAAjB,CAAyB,SAAA/B,IAAI,CAAI,CAC7BA,IAAI,CAACwB,OAAL,CAAe,IAAf,CACH,CAFD,EAIA,GAAMQ,YAAW,CAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAApB,CACAF,WAAW,CAACG,IAAZ,CAAmB,KAAKnC,IAAL,CAAUmC,IAA7B,CACAH,WAAW,CAACI,KAAZ,CAAoB,KAAKpC,IAAL,CAAUoC,KAA9B,CACAJ,WAAW,CAACK,IAAZ,CAAmB,QAAnB,CACAX,IAAI,CAACY,WAAL,CAAiBN,WAAjB,EACAN,IAAI,CAACa,MAAL,GACH,CACJ,C,oCAIL;AACA,mBAAIC,2DAAJ,EAAsBT,OAAtB,CAA8B,SAAA/B,IAAI,QAAI,IAAID,qBAAJ,CAAyBC,IAAzB,CAAJ,EAAlC,E","file":"datagrid-export.bundle.js","sourcesContent":["import BEM from 'bem.js';\nimport {\n    BLOCK_DATAGRID,\n    DATAGRID_EXPORTS,\n    ELEMENT_CELL,\n    ELEMENT_FORM,\n    MODIFIER_ACTION,\n    MODIFIER_CHECKBOX\n} from './constants';\nimport {BLOCK_INPUT} from '../form/constants';\nimport {BLOCK_SELECT_ALL} from '../toggle/constants';\n\nconst MAX_ITERATION_COUNT = 100;\n\n/**\n * Makes sure data grid export buttons default to current page selection.\n */\nclass DataGridExportHelper {\n    /**\n     * Constructor method.\n     * @param {HTMLElement} node\n     */\n    constructor(node) {\n        /** @type {HTMLElement} */\n        this.node = node;\n\n        this.bindEvents();\n    }\n\n    /**\n     * Binds events to callbacks.\n     */\n    bindEvents() {\n        this.node.addEventListener('click', this.update.bind(this));\n    }\n\n    getDataGrid() {\n        let node = this.node;\n        let i = 0;\n        while (!node.classList.contains(BLOCK_DATAGRID)) {\n            i++;\n            node = node.parentNode;\n\n            if (i > MAX_ITERATION_COUNT) {\n                throw `MAX_ITERATION_COUNT (${MAX_ITERATION_COUNT}) reached while trying to find data grid element.`;\n            }\n        }\n\n        return node;\n    }\n\n    /**\n     * Checks all checkboxes in the data grid if none has been checked.\n     * @param {MouseEvent} e\n     */\n    update(e) {\n        const dataGrid = this.getDataGrid();\n        const checkboxCells = BEM.getChildBEMNodes(dataGrid, BLOCK_DATAGRID, ELEMENT_CELL, MODIFIER_CHECKBOX);\n        const checkboxesInputs = [...checkboxCells].map(node => BEM.getChildBEMNode(node, BLOCK_INPUT));\n        const selectedCheckboxInputs = checkboxesInputs.find(node => node.checked);\n\n        // Only check checkboxes if none hase been already checked.\n        if (!selectedCheckboxInputs) {\n            e.preventDefault();\n            const form = BEM.getChildBEMNode(dataGrid, BLOCK_DATAGRID, ELEMENT_FORM, MODIFIER_ACTION);\n            const selectAll = BEM.getChildBEMNode(dataGrid, BLOCK_SELECT_ALL);\n\n            // Select all checkboxes, including the \"select all\" toggle.\n            selectAll.checked = true;\n            checkboxesInputs.forEach(node => {\n                node.checked = true;\n            });\n\n            const hiddenInput = document.createElement('input');\n            hiddenInput.name = this.node.name;\n            hiddenInput.value = this.node.value;\n            hiddenInput.type = 'hidden';\n            form.appendChild(hiddenInput);\n            form.submit();\n        }\n    }\n}\n\n\n// Start!\n[...DATAGRID_EXPORTS].forEach(node => new DataGridExportHelper(node));\n"],"sourceRoot":""}