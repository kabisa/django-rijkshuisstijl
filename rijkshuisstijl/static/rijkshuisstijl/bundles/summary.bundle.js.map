{"version":3,"sources":["webpack:///./rijkshuisstijl/js/components/summary/summary.js"],"names":["SummaryEdit","node","this","validatables","querySelectorAll","bindEvents","forEach","addEventListener","update","bind","i","className","BEM","getBEMClassName","BLOCK_SUMMARY","ELEMENT_KEY_VALUE","classList","contains","parentNode","toggle","getKeyValue","addModifier","MODIFIER_EDIT","focus","scrollIntoView","SUMMARIES"],"mappings":"+gCAKA,IAOMA,E,WAKF,WAAYC,I,4FAAO,CAAD,QAEdC,KAAKD,KAAOA,EAGZC,KAAKC,aAAeD,KAAKD,KAAKG,iBAAiB,oBAE/CF,KAAKG,a,4DAMK,IAAD,OACT,EAAIH,KAAKC,cAAcG,SAAQ,SAAAL,GAAI,OAAIA,EAAKM,iBAAiB,UAAW,EAAKC,OAAOC,KAAK,EAAMR,S,kCAQvFA,GAGR,IAFA,IAAIS,EAAI,EACFC,EAAYC,IAAIC,gBAAgBC,IAAeC,MAC7Cd,EAAKe,UAAUC,SAASN,IAI5B,GAHAD,IACAT,EAAOA,EAAKiB,WAERR,EAzCY,GA0CZ,KAAK,wBAAL,OA1CY,GA0CZ,qDAIR,OAAOT,I,6BAOJA,GACH,IAAMkB,EAASjB,KAAKkB,YAAYnB,GAChCW,IAAIS,YAAYF,EAAQG,KACxBrB,EAAKsB,QACLtB,EAAKuB,sB,gCAMb,EAAIC,KAAWnB,SAAQ,SAAAL,GAAI,OAAI,IAAID,EAAYC","file":"summary.bundle.js","sourcesContent":["import BEM from 'bem.js';\nimport {SUMMARIES, BLOCK_SUMMARY, ELEMENT_KEY_VALUE, MODIFIER_EDIT} from './constants';\n\n\n/** @const {number} getKeyValue() while loop limit. */\nconst MAX_ITERATION_COUNT = 10;\n\n\n/**\n * Controls auto toggle inputs if not valid.\n * @class\n */\nclass SummaryEdit {\n    /**\n     * Constructor method.\n     * @param {HTMLElement} node\n     */\n    constructor(node) {\n        /** @type {HTMLElement} */\n        this.node = node;\n\n        /** @type {NodeList} Children of node that can be validated. */\n        this.validatables = this.node.querySelectorAll(':invalid, :valid');\n\n        this.bindEvents();\n    }\n\n    /**\n     * Binds events to callbacks.\n     */\n    bindEvents() {\n        [...this.validatables].forEach(node => node.addEventListener('invalid', this.update.bind(this, node)));\n    }\n\n    /**\n     * Finds the key value element associated with node.\n     * @param {HTMLElement} node\n     * @return {HTMLElement}\n     */\n    getKeyValue(node) {\n        let i = 0;\n        const className = BEM.getBEMClassName(BLOCK_SUMMARY, ELEMENT_KEY_VALUE);\n        while (!node.classList.contains(className)) {\n            i++;\n            node = node.parentNode;\n\n            if (i > MAX_ITERATION_COUNT) {\n                throw `MAX_ITERATION_COUNT (${MAX_ITERATION_COUNT}) reached while trying to find key value element.`;\n            }\n        }\n\n        return node;\n    }\n\n    /**\n     * Makes sure node is visible if not valid.\n     * @param {HTMLElement} node\n     */\n    update(node) {\n        const toggle = this.getKeyValue(node);\n        BEM.addModifier(toggle, MODIFIER_EDIT);\n        node.focus();\n        node.scrollIntoView();\n    }\n\n}\n\n// Start!\n[...SUMMARIES].forEach(node => new SummaryEdit(node));\n"],"sourceRoot":""}