{"version":3,"sources":["webpack:///./rijkshuisstijl/js/components/form/date-input.js"],"names":["DateInput","node","this","update","dataset","dateFormat","isDateTime","locale","Dutch","firstDayOfWeek","BEM","hasModifier","MODIFIER_DATE_RANGE","type","placeholder","getDateFormat","replace","updatePlaceholder","flatpickr","altInput","altFormat","defaultDate","value","split","getLocale","mode","getMode","l10n","rangeSeparator","DATE_INPUTS","DATE_RANGE_INPUTS","forEach"],"mappings":"upBAUMA,E,WAKF,WAAYC,I,4FAAO,CAAD,QAEdC,KAAKD,KAAOA,EAEZC,KAAKC,S,+DAQL,OAAID,KAAKD,KAAKG,QAAQC,WACXH,KAAKD,KAAKG,QAAQC,WAGtBH,KAAKI,aAAe,YAAc,U,kCAQzC,IAAMC,EAASC,QAEf,OADAD,EAAOE,eAAiB,EACjBF,I,gCAQP,OAAOG,IAAIC,YAAYT,KAAKD,KAAMW,KAAuB,QAAU,W,mCAQnE,MAA0B,aAAnBV,KAAKD,KAAKY,O,0CAIjB,IAAKX,KAAKD,KAAKa,YAAa,CACxB,IAAMA,EAAcZ,KAAKa,gBACpBC,QAAQ,IAAK,MACbA,QAAQ,IAAK,MACbA,QAAQ,IAAK,QAClBd,KAAKD,KAAKa,YAAcA,K,+BAQ5BZ,KAAKe,oBAEcC,IAAUhB,KAAKD,KAAM,CACpCkB,UAAU,EACVC,UAAWlB,KAAKa,gBAChBV,WAAY,QACZgB,YAAanB,KAAKD,KAAKqB,MAAMC,MAAM,KACnChB,OAAQL,KAAKsB,YACbC,KAAMvB,KAAKwB,YAEJC,KAAKC,eAAiB,S,gCAMzC,YAAIC,KAAJ,EAAoBC,MAAmBC,SAAQ,SAAA9B,GAAI,OAAI,IAAID,EAAUC","file":"date-input.bundle.js","sourcesContent":["import BEM from 'bem.js';\nimport flatpickr from 'flatpickr';\nimport {Dutch} from 'flatpickr/dist/l10n/nl';\nimport {MODIFIER_DATE_RANGE, DATE_INPUTS, DATE_RANGE_INPUTS} from './constants';\n\n\n/**\n * Adds a datepicker to date inputs.\n * @class\n */\nclass DateInput {\n    /**\n     * Constructor method.\n     * @param {HTMLInputElement} node\n     */\n    constructor(node) {\n        /** @type {HTMLInputElement} */\n        this.node = node;\n\n        this.update();\n    }\n\n    /**\n     * Returns the date format to use with the datepicker.\n     * @return {string}\n     */\n    getDateFormat() {\n        if (this.node.dataset.dateFormat) {\n            return this.node.dataset.dateFormat;\n        }\n\n        return this.isDateTime() ? 'd-m-Y H:1' : 'd-m-Y';\n    }\n\n    /**\n     * Returns the (Dutch) locale to use.\n     * @return {CustomLocale}\n     */\n    getLocale() {\n        const locale = Dutch;\n        locale.firstDayOfWeek = 0;\n        return locale;\n    }\n\n    /**\n     * Returns the mode to use, either \"range\" or \"single\".\n     * @return {string}\n     */\n    getMode() {\n        return BEM.hasModifier(this.node, MODIFIER_DATE_RANGE) ? 'range' : 'single';\n    }\n\n    /**\n     * @TODO: Yet to be supported.\n     * @return {boolean}\n     */\n    isDateTime() {\n        return this.node.type === 'datetime';\n    }\n\n    updatePlaceholder() {\n        if (!this.node.placeholder) {\n            const placeholder = this.getDateFormat()\n                .replace('d', 'dd')\n                .replace('m', 'mm')\n                .replace('Y', 'yyyy');\n            this.node.placeholder = placeholder;\n        }\n    }\n\n    /**\n     * Adds the datepicker.\n     */\n    update() {\n        this.updatePlaceholder();\n\n        const flatPicker = flatpickr(this.node, {\n            altInput: true,\n            altFormat: this.getDateFormat(),\n            dateFormat: 'Y-m-d',\n            defaultDate: this.node.value.split('/'),\n            locale: this.getLocale(),\n            mode: this.getMode(),\n        });\n        flatPicker.l10n.rangeSeparator = '/';\n    }\n}\n\n\n// Start!\n[...DATE_INPUTS, ...DATE_RANGE_INPUTS].forEach(node => new DateInput(node));\n\n\n"],"sourceRoot":""}