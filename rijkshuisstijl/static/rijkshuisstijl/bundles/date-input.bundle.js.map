{"version":3,"sources":["webpack:///./node_modules/flatpickr/dist/l10n/nl.js","webpack:///./rijkshuisstijl/js/components/form/date-input.js"],"names":["exports","fp","window","undefined","flatpickr","l10ns","Dutch","weekdays","shorthand","longhand","months","firstDayOfWeek","weekAbbreviation","rangeSeparator","scrollTitle","toggleTitle","time_24hr","ordinal","nth","nl","default","Object","defineProperty","value","factory","DateInput","node","this","update","dataset","dateFormat","isDateTime","locale","BEM","hasModifier","MODIFIER_DATE_RANGE","type","selectedDates","dateStr","copyAttrs","altInput","cleanValue","target","targetAttributes","attributes","excludedAttributes","forEach","attr","name","indexOf","setAttribute","match","addModifier","MODIFIER_DATE","placeholder","getDateFormat","replace","updateClassName","updatePlaceholder","altInputClass","className","altFormat","defaultDate","split","getLocale","mode","getMode","onReady","bind","l10n","DATE_INPUTS","DATE_RANGE_INPUTS"],"mappings":"8EAIQ,SAAUA,GAAW,aAE3B,IAAIC,EAAuB,oBAAXC,aAA+CC,IAArBD,OAAOE,UAC3CF,OAAOE,UACP,CACEC,MAAO,IAEXC,EAAQ,CACRC,SAAU,CACNC,UAAW,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAChDC,SAAU,CACN,SACA,UACA,UACA,WACA,YACA,UACA,aAGRC,OAAQ,CACJF,UAAW,CACP,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,OAEJC,SAAU,CACN,UACA,WACA,QACA,QACA,MACA,OACA,OACA,WACA,YACA,UACA,WACA,aAGRE,eAAgB,EAChBC,iBAAkB,KAClBC,eAAgB,QAChBC,YAAa,gCACbC,YAAa,sBACbC,WAAW,EACXC,QAAS,SAAUC,GACf,OAAY,IAARA,GAAqB,IAARA,GAAaA,GAAO,GAC1B,MACJ,OAGfjB,EAAGI,MAAMc,GAAKb,EACd,IAAIa,EAAKlB,EAAGI,MAEZL,EAAQM,MAAQA,EAChBN,EAAQoB,QAAUD,EAElBE,OAAOC,eAAetB,EAAS,aAAc,CAAEuB,OAAO,IAvESC,CAAQxB,I,m/BCSnEyB,E,WAKF,WAAYC,I,4FAAO,CAAD,QAEdC,KAAKD,KAAOA,EACZC,KAAKC,S,+DAQL,OAAID,KAAKD,KAAKG,QAAQC,WACXH,KAAKD,KAAKG,QAAQC,WAGtBH,KAAKI,aAAe,YAAc,U,kCAQzC,IAAMC,EAAS1B,QAEf,OADA0B,EAAOrB,eAAiB,EACjBqB,I,gCAQP,OAAOC,IAAIC,YAAYP,KAAKD,KAAMS,KAAuB,QAAU,W,mCAQnE,MAA0B,aAAnBR,KAAKD,KAAKU,O,8BASbC,EAAeC,EAASlC,GAC5BuB,KAAKY,UAAUnC,EAAUoC,UACzBb,KAAKc,e,gCAOCC,GACN,IAAMC,EAAmBD,EAAOE,WAC1BC,EAAqB,CAAC,OAAQ,OAAQ,SAE5C,EAAIlB,KAAKD,KAAKkB,YAAYE,SAAQ,SAAAC,GACxBA,EAAKC,QAAQL,IAAgE,IAA3CE,EAAmBI,QAAQF,EAAKC,OACpEN,EAAOQ,aAAaH,EAAKC,KAAMD,EAAKxB,Y,mCAUvCI,KAAKD,KAAKH,MAAM4B,MAAM,QACvBxB,KAAKD,KAAKH,MAAQ,M,wCAQtBU,IAAImB,YAAYzB,KAAKD,KAAM2B,O,0CAO3B,IAAK1B,KAAKD,KAAK4B,YAAa,CACxB,IAAMA,EAAc3B,KAAK4B,gBACpBC,QAAQ,IAAK,MACbA,QAAQ,IAAK,MACbA,QAAQ,IAAK,QAClB7B,KAAKD,KAAK4B,YAAcA,K,+BAQ5B3B,KAAK8B,kBACL9B,KAAK+B,oBACctD,IAAUuB,KAAKD,KAAM,CACpCc,UAAU,EACVmB,cAAehC,KAAKD,KAAKkC,UACzBC,UAAWlC,KAAK4B,gBAChBzB,WAAY,QACZgC,YAAanC,KAAKD,KAAKH,MAAMwC,MAAM,KACnC/B,OAAQL,KAAKqC,YACbC,KAAMtC,KAAKuC,UACXC,QAASxC,KAAKwC,QAAQC,KAAKzC,QAEpB0C,KAAKxD,eAAiB,S,gCAKzC,YAAIyD,KAAJ,EAAoBC,MAAmBzB,SAAQ,SAAApB,GAAI,OAAI,IAAID,EAAUC","file":"date-input.bundle.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.nl = {}));\n}(this, function (exports) { 'use strict';\n\n  var fp = typeof window !== \"undefined\" && window.flatpickr !== undefined\n      ? window.flatpickr\n      : {\n          l10ns: {}\n      };\n  var Dutch = {\n      weekdays: {\n          shorthand: [\"zo\", \"ma\", \"di\", \"wo\", \"do\", \"vr\", \"za\"],\n          longhand: [\n              \"zondag\",\n              \"maandag\",\n              \"dinsdag\",\n              \"woensdag\",\n              \"donderdag\",\n              \"vrijdag\",\n              \"zaterdag\",\n          ]\n      },\n      months: {\n          shorthand: [\n              \"jan\",\n              \"feb\",\n              \"mrt\",\n              \"apr\",\n              \"mei\",\n              \"jun\",\n              \"jul\",\n              \"aug\",\n              \"sept\",\n              \"okt\",\n              \"nov\",\n              \"dec\",\n          ],\n          longhand: [\n              \"januari\",\n              \"februari\",\n              \"maart\",\n              \"april\",\n              \"mei\",\n              \"juni\",\n              \"juli\",\n              \"augustus\",\n              \"september\",\n              \"oktober\",\n              \"november\",\n              \"december\",\n          ]\n      },\n      firstDayOfWeek: 1,\n      weekAbbreviation: \"wk\",\n      rangeSeparator: \" tot \",\n      scrollTitle: \"Scroll voor volgende / vorige\",\n      toggleTitle: \"Klik om te wisselen\",\n      time_24hr: true,\n      ordinal: function (nth) {\n          if (nth === 1 || nth === 8 || nth >= 20)\n              return \"ste\";\n          return \"de\";\n      }\n  };\n  fp.l10ns.nl = Dutch;\n  var nl = fp.l10ns;\n\n  exports.Dutch = Dutch;\n  exports.default = nl;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","import BEM from 'bem.js';\nimport flatpickr from 'flatpickr';\nimport {Dutch} from 'flatpickr/dist/l10n/nl';\nimport {MODIFIER_DATE_RANGE, DATE_INPUTS, DATE_RANGE_INPUTS, MODIFIER_DATE} from './constants';\n\n\n/**\n * Adds a datepicker to date inputs.\n * @class\n */\nclass DateInput {\n    /**\n     * Constructor method.\n     * @param {HTMLInputElement} node\n     */\n    constructor(node) {\n        /** @type {HTMLInputElement} */\n        this.node = node;\n        this.update();\n    }\n\n    /**\n     * Returns the date format to use with the datepicker.\n     * @return {string}\n     */\n    getDateFormat() {\n        if (this.node.dataset.dateFormat) {\n            return this.node.dataset.dateFormat;\n        }\n\n        return this.isDateTime() ? 'd-m-Y H:1' : 'd-m-Y';\n    }\n\n    /**\n     * Returns the (Dutch) locale to use.\n     * @return {CustomLocale}\n     */\n    getLocale() {\n        const locale = Dutch;\n        locale.firstDayOfWeek = 1;  // Start on monday.\n        return locale;\n    }\n\n    /**\n     * Returns the mode to use, either \"range\" or \"single\".\n     * @return {string}\n     */\n    getMode() {\n        return BEM.hasModifier(this.node, MODIFIER_DATE_RANGE) ? 'range' : 'single';\n    }\n\n    /**\n     * @TODO: Yet to be supported.\n     * @return {boolean}\n     */\n    isDateTime() {\n        return this.node.type === 'datetime';\n    }\n\n    /**\n     * onReady callback for flatpickr.\n     * @param {Array} selectedDates\n     * @param {string} dateStr\n     * @param {Object} flatpickr\n     */\n    onReady(selectedDates, dateStr, flatpickr) {\n        this.copyAttrs(flatpickr.altInput);\n        this.cleanValue()\n    }\n\n    /**\n     * Copies attributes of this.node to target only if not already set on target.\n     * @param {HTMLElement} target\n     */\n    copyAttrs(target) {\n        const targetAttributes = target.attributes;\n        const excludedAttributes = ['form', 'name', 'value'];\n\n        [...this.node.attributes].forEach(attr => {\n            if (!(attr.name in targetAttributes) && excludedAttributes.indexOf(attr.name) === -1) {\n                target.setAttribute(attr.name, attr.value);\n            }\n        });\n\n    }\n\n    /**\n     * Makes sure a useful value is set on the value attribute.\n     */\n    cleanValue() {\n        if (!this.node.value.match(/\\d/)) {\n            this.node.value = '';\n        }\n    }\n\n    /**\n     * Adds MODIFIER_DATE to this.node.\n     */\n    updateClassName() {\n        BEM.addModifier(this.node, MODIFIER_DATE);\n    }\n\n    /**\n     * Adds placeholder to this.node.\n     */\n    updatePlaceholder() {\n        if (!this.node.placeholder) {\n            const placeholder = this.getDateFormat()\n                .replace('d', 'dd')\n                .replace('m', 'mm')\n                .replace('Y', 'yyyy');\n            this.node.placeholder = placeholder;\n        }\n    }\n\n    /**\n     * Adds the datepicker.\n     */\n    update() {\n        this.updateClassName();\n        this.updatePlaceholder();\n        const flatPicker = flatpickr(this.node, {\n            altInput: true,\n            altInputClass: this.node.className,\n            altFormat: this.getDateFormat(),\n            dateFormat: 'Y-m-d',\n            defaultDate: this.node.value.split('/'),\n            locale: this.getLocale(),\n            mode: this.getMode(),\n            onReady: this.onReady.bind(this),\n        });\n        flatPicker.l10n.rangeSeparator = '/';\n    }\n}\n\n// Start!\n[...DATE_INPUTS, ...DATE_RANGE_INPUTS].forEach(node => new DateInput(node));\n\n\n"],"sourceRoot":""}