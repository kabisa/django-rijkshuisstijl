{"version":3,"sources":["webpack:///./rijkshuisstijl/js/components/datagrid/datagrid-filter.js"],"names":["DataGridFilter","node","form","getForm","input","getInput","bindEvents","addEventListener","onSubmit","bind","formId","getAttribute","document","getElementById","BEM","getChildBEMNode","BLOCK_INPUT","select","BLOCK_SELECT","id","inputs","querySelectorAll","forEach","newNode","createElement","name","type","value","appendChild","submit","DATAGRID_FILTERS"],"mappings":";;;;;;;;;;;;;;;+pDAIA;;MAGMA,e,yBACF;;;OAIA,wBAAYC,IAAZ,CAAkB,sCACd,0BACA,KAAKA,IAAL,CAAYA,IAAZ,CAEA,qCACA,KAAKC,IAAL,CAAY,KAAKC,OAAL,EAAZ,CAEA,wDACA,KAAKC,KAAL,CAAa,KAAKC,QAAL,EAAb,CAEA,KAAKC,UAAL,GACH,CAED;;iFAGa,CACT,GAAI,KAAKF,KAAT,CAAgB,CACZ,KAAKA,KAAL,CAAWG,gBAAX,CAA4B,QAA5B,CAAsC,KAAKC,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAtC,EACH,CACJ,CAED;;;gDAIU,CACN,GAAML,MAAK,CAAG,KAAKC,QAAL,EAAd,CACA,GAAID,KAAJ,CAAW,CACP,GAAI,CAACA,KAAK,CAACF,IAAX,CAAiB,CACb,GAAMQ,OAAM,CAAGN,KAAK,CAACO,YAAN,CAAmB,MAAnB,CAAf,CACA,MAAOC,SAAQ,CAACC,cAAT,CAAwBH,MAAxB,CAAP,CACH,CACD,MAAON,MAAK,CAACF,IAAb,CACH,CACJ,CAED;;;kDAIW,CACP,GAAME,MAAK,CAAGU,6CAAG,CAACC,eAAJ,CAAoB,KAAKd,IAAzB,CAA+Be,2DAA/B,CAAd,CACA,GAAMC,OAAM,CAAGH,6CAAG,CAACC,eAAJ,CAAoB,KAAKd,IAAzB,CAA+BiB,4DAA/B,CAAf,CACA,MAAOd,MAAK,EAAIa,MAAhB,CACH,CAED;;;kDAIW,gBACP,GAAMP,OAAM,CAAG,KAAKR,IAAL,CAAUiB,EAAzB,CACA,GAAMC,OAAM,CAAGR,QAAQ,CAACS,gBAAT,mBAAoCX,MAApC,QAAf,CAEA,mBAAIU,MAAJ,EAAYE,OAAZ,CAAoB,SAAArB,IAAI,CAAI,CACxB,GAAMsB,QAAO,CAAGX,QAAQ,CAACY,aAAT,CAAuB,OAAvB,CAAhB,CAEA,GAAIvB,IAAI,CAACC,IAAT,CAAe,CAAG;AACd,OACH,CAEDqB,OAAO,CAACE,IAAR,CAAexB,IAAI,CAACwB,IAApB,CACAF,OAAO,CAACG,IAAR,CAAe,QAAf,CACAH,OAAO,CAACI,KAAR,CAAgB1B,IAAI,CAAC0B,KAArB,CAEA,KAAI,CAACzB,IAAL,CAAU0B,WAAV,CAAsBL,OAAtB,EACH,CAZD,EAcA,KAAKrB,IAAL,CAAU2B,MAAV,GACH,C,8BAIL;AACA,mBAAIC,2DAAJ,EAAsBR,OAAtB,CAA8B,SAAArB,IAAI,QAAI,IAAID,eAAJ,CAAmBC,IAAnB,CAAJ,EAAlC,E","file":"datagrid-filter.bundle.js","sourcesContent":["import BEM from 'bem.js';\nimport {DATAGRID_FILTERS} from './constants';\nimport {BLOCK_INPUT, BLOCK_SELECT} from '../form/constants';\n\n/**\n * Polyfills form association from datagrid filter.\n */\nclass DataGridFilter {\n    /**\n     * Constructor method.\n     * @param {HTMLElement} node\n     */\n    constructor(node) {\n        /** @type {HTMLElement} */\n        this.node = node;\n\n        /** @type {(HTMLFormElement|null)} */\n        this.form = this.getForm();\n\n        /** @type {(HTMLInputElement|HTMLSelectElement|null)} */\n        this.input = this.getInput();\n\n        this.bindEvents();\n    }\n\n    /**\n     * Binds events to callbacks.\n     */\n    bindEvents() {\n        if (this.input) {\n            this.input.addEventListener('change', this.onSubmit.bind(this));\n        }\n    }\n\n    /**\n     * Finds the form associated with the filter.\n     * @return {(HTMLFormElement|null)}\n     */\n    getForm() {\n        const input = this.getInput();\n        if (input) {\n            if (!input.form) {\n                const formId = input.getAttribute('form');\n                return document.getElementById(formId);\n            }\n            return input.form;\n        }\n    }\n\n    /**\n     * Finds the first input or select as child of this.node.\n     * @return {(HTMLInputElement|HTMLSelectElement|null)}\n     */\n    getInput() {\n        const input = BEM.getChildBEMNode(this.node, BLOCK_INPUT);\n        const select = BEM.getChildBEMNode(this.node, BLOCK_SELECT);\n        return input || select;\n    }\n\n    /**\n     * Appends clone of inputs pointing to this.form before submitting it when browser does not support input form\n     * attribute.\n     */\n    onSubmit() {\n        const formId = this.form.id;\n        const inputs = document.querySelectorAll(`[form=\"${formId}\"]`);\n\n        [...inputs].forEach(node => {\n            const newNode = document.createElement('input');\n\n            if (node.form) {  // Browser supports input form attribute.\n                return;\n            }\n\n            newNode.name = node.name;\n            newNode.type = 'hidden';\n            newNode.value = node.value;\n\n            this.form.appendChild(newNode);\n        });\n\n        this.form.submit();\n    }\n}\n\n\n// Start!\n[...DATAGRID_FILTERS].forEach(node => new DataGridFilter(node));\n\n\n\n"],"sourceRoot":""}